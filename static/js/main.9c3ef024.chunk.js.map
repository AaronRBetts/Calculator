{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttonObjects","value","id","type","keyCode","App","props","handleInput","input","console","log","handleDigitInput","state","currentVal","setState","negNum","handleOperator","wholeNum","emptyDecimals","output","calcOutcome","storedVal","equationOperator","resetCalc","val1","operator","val2","outcome","belowZeroDivider","handleKeyPress","bind","document","addEventListener","this","newVal","e","result","find","obj","className","style","display","visibility","map","key","idx","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c3ef024.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst buttonObjects = [\n  {\n    value: '+',\n    id: 'add',\n    type: 'operator',\n    keyCode: 107\n  },\n  {\n    value: '-',\n    id: 'subtract',\n    type: 'operator',\n    keyCode: 109\n  },\n  {\n    value: '*',\n    id: 'multiply',\n    type: 'operator',\n    keyCode: 106\n  },\n  {\n    value: '/',\n    id: 'divide',\n    type: 'operator',\n    keyCode: 111\n  },\n  {\n    value: 7,\n    id: 'seven',\n    type: 'num',\n    keyCode: 103\n  },\n  {\n    value: 8,\n    id: 'eight',\n    type: 'num',\n    keyCode: 104\n  },\n  {\n    value: 9,\n    id: 'nine',\n    type: 'num',\n    keyCode: 105\n  },\n  {\n    value: 4,\n    id: 'four',\n    type: 'num',\n    keyCode: 100\n  },\n  {\n    value: 5,\n    id: 'five',\n    type: 'num',\n    keyCode: 101\n  },\n  {\n    value: 6,\n    id: 'six',\n    type: 'num',\n    keyCode: 102\n  },\n  {\n    value: 1,\n    id: 'one',\n    type: 'num',\n    keyCode: 97\n  },\n  {\n    value: 2,\n    id: 'two',\n    type: 'num',\n    keyCode: 98\n  },\n  {\n    value: 3,\n    id: 'three',\n    type: 'num',\n    keyCode: 99\n  },\n  {\n    value: 0,\n    id: 'zero',\n    type: 'num',\n    keyCode: 96\n  },\n  {\n    value: '.',\n    id: 'decimal',\n    type: 'decimal',\n    keyCode: 110\n  },\n  {\n    value: 'clear',\n    id: 'clear',\n    type: 'clear',\n    keyCode: 8\n  },\n  {\n    value: '=',\n    id: 'equals',\n    type: 'equals',\n    keyCode: 13\n  }\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentVal: 0,\n      storedVal: 0,\n      belowZeroDivider: 10,\n      wholeNum: true,\n      output: '',\n      equationOperator: '',\n      negNum: false,\n      emptyDecimals: ''\n    }\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleInput = (input, type) => {\n    console.log('input: ' + input, 'type: ' + type)\n    // determine the type of input\n    if (type === 'num') {\n      this.handleDigitInput(input);\n    } else if (input === '-' && this.state.currentVal === 0) {\n      this.setState({\n        negNum: true\n      })\n    }else if (type === 'operator') {\n      this.handleOperator(input);\n    } else if (type === 'decimal' && this.state.wholeNum === true) {\n      this.setState({\n        wholeNum: false,\n        emptyDecimals: '.'\n      })\n    } else if (type === 'equals') {\n      this.setState({\n        output: this.calcOutcome(this.state.storedVal, this.state.equationOperator, this.state.currentVal),\n      })\n    } else if (type === 'clear') {\n      this.setState({\n        output: ''\n      })\n      this.resetCalc();\n    }\n  }\n\n  handleDigitInput(input) {\n    console.log('digit input: ' + input)\n    let newVal;\n    if (this.state.wholeNum === true) {\n      // If there is no decimal point\n      if (this.state.negNum) {\n        newVal = (this.state.currentVal * 10) - input;\n      } else {\n        newVal = (this.state.currentVal * 10) + input;\n      }\n    } else {\n      // If there is an existing decimal point\n      if (this.state.negNum) {\n        newVal = this.state.currentVal - (input / this.state.belowZeroDivider)\n      } else {\n        newVal = this.state.currentVal + (input / this.state.belowZeroDivider)\n      }\n      this.setState({\n        belowZeroDivider: this.state.belowZeroDivider * 10,\n      });\n      if (input === 0) {\n        this.setState({\n          emptyDecimals: this.state.emptyDecimals + '0'\n        })\n      } else {\n        this.setState({\n          emptyDecimals: ''\n        })\n      }\n    }\n    this.setState({\n      currentVal: newVal\n    })\n    // if a value is entered after a calculation has just been made\n    if (this.calcOutcome(this.state.storedVal, this.state.equationOperator, this.state.currentVal) === this.state.output) {\n      this.setState({\n        currentVal: newVal,\n        output: ''\n      })\n    }\n    console.log(newVal)\n  }\n\n  handleOperator(input) {\n    console.log('handling operator')\n    this.setState({\n      equationOperator: input,\n    })\n    const outcome = this.calcOutcome(this.state.storedVal, this.state.equationOperator, this.state.currentVal)\n    // If there's an input, store input and continue with second part of equation\n    if (this.state.currentVal !== 0 || this.state.output === 0) {\n      console.log('setting stored value = currentVal')\n      this.setState({\n        storedVal: this.state.currentVal,\n      })\n    }\n    // if a valid equation exists, calculate and continue\n    else if (outcome !== this.output && this.state.currentVal !== 0) {\n      console.log('valid equation, setting storedVal and output to equation')\n      this.setState({\n        storedVal: outcome,\n        output: outcome,\n        equationOperator: input,\n        belowZeroDivider: 10,\n        wholeNum: true,\n        negNum: false,\n      })\n    }\n\n    this.setState({\n      currentVal: 0,\n      belowZeroDivider: 10,\n      wholeNum: true,\n      negNum: false\n    })\n  }\n\n  calcOutcome = (val1, operator, val2) => {\n    let outcome;\n    // check what operator was used and calculate accordingly\n    switch (operator) {\n      case '+':\n        outcome = val1 + val2;        \n        break;\n      case '-':\n        outcome = val1 - val2;        \n        break;\n      case '*':\n        outcome = val1 * val2;        \n        break;\n      case '/':\n        outcome = val1 / val2;        \n        break;\n      default:\n        break;\n    }\n    return outcome;\n  }\n\n  resetCalc() {\n    console.log('calculator reset')\n    // restore calculator to initial state\n    this.setState({\n      currentVal: 0,\n      storedVal: 0,\n      belowZeroDivider: 10,\n      wholeNum: true,\n      negNum: false,\n      equationOperator: '',\n    });\n  }\n\n  handleKeyPress(e) {\n    console.log('key pressed: ' + e.value)\n    // Check if key pressed is in calc buttons array\n    var result = buttonObjects.find(obj => {\n      return obj.keyCode === e.keyCode\n    });\n\n    if(result) {\n      // handle input if key pressed is on calculator\n      this.handleInput(result.value, result.type);\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"calc\" className=\"calculator\">\n        <div className=\"display\">\n          <p style={{display: this.state.storedVal !== 0 ? 'initial' : 'none'}}>\n            {this.state.storedVal}\n            {this.state.storedVal === 0 ? '' : this.state.emptyDecimals}</p>\n          <p style={{display: this.state.equationOperator !== '' ? 'initial' : 'none'}}>\n            {this.state.equationOperator}</p>\n          <p style={{visibility: this.state.currentVal !== 0 ? 'visible' : 'hidden'}}>\n            {this.state.currentVal}\n            {this.state.currentVal === 0 ? '' : this.state.emptyDecimals}</p>\n        </div>\n        <div className=\"calculator-pad\">\n          {buttonObjects.map((key, idx) => (\n            <button key={idx} id={key.id} onClick={() => this.handleInput(key.value, key.type)}>{key.value}</button>\n          ))}\n        </div>\n        <div className=\"display\">\n          <p id=\"display\">\n            {this.state.output !== '' && this.state.storedVal !== 0 ? this.state.output : this.state.currentVal}\n            {this.state.currentVal === 0 ? '' : this.state.emptyDecimals}</p>\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}